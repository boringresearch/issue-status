{"version":3,"sources":["components/status/statuses.js","components/status/useStatus.js","components/status/index.js","components/status/useRefetch.js","components/useIssues.js","components/header/index.js","components/components/skeleton.js","components/components/component/statuses.js","components/components/component/status.js","components/components/component/useStatus.js","components/components/component/index.js","components/useDidMount.js","components/components/index.js","components/incidents/incident/index.js","components/incidents/skeleton.js","components/incidents/index.js","components/smaintenance/maintenance/index.js","components/smaintenance/skeleton.js","components/smaintenance/index.js","components/footer/index.js","components/App.js","serviceWorker.js","index.js"],"names":["message","backgroundColour","getComponentLabelPercent","components","label","filter","component","labels","find","componentLabel","name","length","StatusBar","styled","div","_templateObject","_taggedTemplateLiteral","props","Status","h2","_templateObject2","Reload","button","_templateObject3","Code","code","_templateObject4","_ref","loading","error","refetch","status","setStatus","useState","useEffect","statusSet","statuses","useStatus","timeAgo","updateTimeAgoDep","setTimeAgo","moment","Date","localStorage","getItem","fromNow","interval","setInterval","clearInterval","useRefetch","_jsxs","_Fragment","children","hasError","_jsx","JSON","stringify","errors","onClick","results","setResults","setError","setLoading","concat","fetchData","parse","fetch","process","then","response","json","data","setItem","catch","toString","h1","Logo","img","Header","src","alt","operational","colour","performanceIssues","partialOutage","majorOutage","unknown","Object","values","toLowerCase","Component","title","hasMounted","setHasMounted","useDidMount","map","id","Skeleton","Incident","active","Details","Title","Comment","_templateObject5","Created","_templateObject6","incident","closed_at","created_at","format","toUpperCase","ReactMarkdown","body","Container","NoFound","incidents","Maintenance","maintenance","href","html_url","source","smaintenance","Footer","Branding","a","visible","REACT_APP_BRANDING","rel","target","ComponentsContainer","Name","componentsLoading","componentsError","componentsResults","componentsRefetch","useIssues","incidentsLoading","incidentsError","incidentsResults","incidentsRefetch","smaintenanceLoading","smaintenanceError","smaintenanceResults","smaintenanceRefetch","Components","Incidents","Boolean","window","location","hostname","match","ReactDOM","render","React","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"uOAAe,EACA,CACXA,QAAS,0BACTC,iBAAkB,WAHP,EAKL,CACND,QAAS,uCACTC,iBAAkB,WAPP,EASL,CACND,QAAS,+CACTC,iBAAkB,WCctB,MAAMC,EAA2BA,CAACC,EAAYC,IAI1C,IAHDD,EAAWE,QAAQC,GAClBA,EAAUC,OAAOC,MAAMC,GAAmBA,EAAeC,OAASN,MAClEO,OAEFR,EAAWQ,O,mCCzBb,MAAMC,EAAYC,IAAOC,IAAGC,MAAAC,YAAA,4OACLC,GACnBA,EAAMhB,iBAAmBgB,EAAMhB,iBAAmB,YAYhDiB,EAASL,IAAOM,GAAEC,MAAAJ,YAAA,oEAMlBK,EAASR,IAAOS,OAAMC,MAAAP,YAAA,sKAUtBQ,EAAOX,IAAOY,KAAIC,MAAAV,YAAA,uDAMTW,UAA8C,IAA7C,QAAEC,EAAO,MAAEC,EAAK,WAAE1B,EAAU,QAAE2B,GAASH,EACrD,MAAOI,GDvCO5B,KACd,MAAO4B,EAAQC,GAAaC,qBAkB5B,OAhBAC,qBAAU,KACR,IAAIC,GAAY,EAEZjC,EAAyBC,EAAY,eAAiB,KACxD6B,EAAUI,GACVD,GAAY,GAGVjC,EAAyBC,EAAY,gBAAkB,IACzD6B,EAAUI,GACVD,GAAY,GAGTA,GAAWH,EAAUI,EAAqB,GAC9C,CAACjC,IAEG,CAAC4B,EACT,ECmBkBM,CAAUlC,IACpBmC,GCxCM,EAACR,EAASS,KACvB,MAAOD,EAASE,GAAcP,mBAC5BQ,IACE,IAAIC,KAAKC,aAAaC,QAAQ,mCAC9BC,WAsCJ,OAnCAX,qBAAU,KACR,MAAMY,EAAWC,aAAY,KAEzB,IAAIL,KAAKC,aAAaC,QAAQ,kCAC9B,IAAIF,KAAS,KAEbZ,GAAQ,KACNU,EACEC,IACE,IAAIC,KAAKC,aAAaC,QAAQ,mCAC9BC,UACH,IAGHL,EACEC,IACE,IAAIC,KAAKC,aAAaC,QAAQ,mCAC9BC,UAEN,GACC,KAEH,MAAO,KACLG,cAAcF,EAAS,CACxB,GACA,CAAChB,IAEJI,qBAAU,KACRM,EACEC,IACE,IAAIC,KAAKC,aAAaC,QAAQ,mCAC9BC,UACH,GACA,CAACN,IAEG,CAACD,EACT,EDHmBW,CAAWnB,EAASF,GAEtC,OACEsB,eAAAC,WAAA,CAAAC,SAAA,CACGvB,EAAMwB,UACLH,eAAC1B,EAAI,CAAA4B,SAAA,CACHE,cAAA,OAAAF,SAAK,qBACLE,cAAA,OAAAF,SAAK,wFAIJG,KAAKC,UAAU3B,EAAM4B,OAAQ,KAAM,MAGxCP,eAACtC,EAAS,CAACX,iBAAwB,OAAN8B,QAAM,IAANA,OAAM,EAANA,EAAQ9B,iBAAiBmD,SAAA,CACpDE,cAACpC,EAAM,CAAAkC,SAAQ,OAANrB,QAAM,IAANA,OAAM,EAANA,EAAQ/B,UACjBsD,cAACjC,EAAM,CAACqC,QAAS5B,EAAQsB,SAAExB,EAAU,YAAcU,SAI1D,EE7DelC,MACd,MAAOuD,EAASC,GAAc3B,mBAAS,KAChCJ,EAAOgC,GAAY5B,sBACnBL,EAASkC,GAAc7B,oBAAS,GAgBvC,OAdAC,qBAAU,KAGN,IAAIQ,KAAKC,aAAaC,QAAQ,uBAADmB,OAAwB3D,KACrD,IAAIsC,KAAS,KAEbsB,EAAUF,EAAYD,EAAUD,EAAYxD,IAE5CwD,EAAWL,KAAKU,MAAMtB,aAAaC,QAAQ,cAADmB,OAAe3D,MACzD0D,GAAW,GACXD,IACF,GACC,CAACzD,IAEG,CACLwB,EACAC,EACA8B,GAAW,GACX,IAAMK,EAAUF,EAAYD,EAAUD,EAAYxD,GAErD,EAED,MAAM4D,EAAYA,CAACF,EAAYD,EAAUD,EAAYxD,KACnD0D,GAAW,GACXI,MAAM,gCAADH,OAC6BI,wBAAgC,0CAAAJ,OAAyC3D,IAExGgE,MAAMC,GACEA,EAASC,SAEjBF,MAAMG,IACLV,IACAlB,aAAa6B,QAAQ,uBAADT,OAAwB3D,GAAS,IAAIsC,MACzDC,aAAa6B,QAAQ,cAADT,OAAe3D,GAASmD,KAAKC,UAAUe,IAC3DX,EAAWW,GACXT,GAAW,EAAM,IAElBW,OAAO5C,IACNgC,EAAShC,EAAM6C,YACf/B,aAAa6B,QAAQ,uBAADT,OAAwB3D,GAAS,IAAIsC,MACzDkB,EAAWL,KAAKU,MAAMtB,aAAaC,QAAQ,cAADmB,OAAe3D,MACzD0D,GAAW,EAAM,GACjB,E,UC9CQjD,IAAO8D,GAAE5D,MAAAC,YAAA,wEAAvB,MAMM4D,EAAO/D,IAAOgE,IAAGzD,MAAAJ,YAAA,QAEjB8D,EAASjE,IAAOC,IAAGS,MAAAP,YAAA,yDAKV,I,IAAA,MAEXsC,cAACwB,EAAM,CAAA1B,SAEHE,cAACsB,EAAI,CACHG,IAAKZ,uFACLa,IAAKb,mBCpBAtD,MAAOC,IAAGC,MAAAC,YAAA,uJCFV,GACbiE,YAAa,CACXvE,KAAM,cACNwE,OAAQ,UACRjF,iBAAkB,0BAEpBkF,kBAAmB,CACjBzE,KAAM,qBACNwE,OAAQ,UACRjF,iBAAkB,2BAEpBmF,cAAe,CACb1E,KAAM,iBACNwE,OAAQ,UACRjF,iBAAkB,4BAEpBoF,YAAa,CACX3E,KAAM,eACNwE,OAAQ,UACRjF,iBAAkB,0BAEpBqF,QAAS,CACP5E,KAAM,UACNwE,OAAQ,UACRjF,iBAAkB,6BCpBtB,MAAMiB,EAASL,IAAOC,IAAGC,MAAAC,YAAA,0IACbC,GAAUA,EAAMiE,SACLjE,GAAUA,EAAMhB,mBAOxB0B,I,EAAAA,MAAiB,IAAhB,OAAEpB,GAAQoB,EACxB,MAAOI,GCXOxB,KACd,MAAOwB,EAAQC,GAAaC,qBAY5B,OAVAC,qBAAU,KACRF,EACEuD,OAAOC,OAAOpD,GAAU5B,MAAMuB,GAC5BxB,EAAOC,MAAMJ,GAAUA,EAAMM,OAASqB,EAAOrB,KAAK+E,kBAErD,GACA,CAAClF,IAECwB,GAAQC,EAAUI,EAASkD,SAEzB,CAACvD,EACT,EDHkBM,CAAU9B,GAE3B,OACE+C,cAACpC,EAAM,CAACgE,OAAc,OAANnD,QAAM,IAANA,OAAM,EAANA,EAAQmD,OAAQjF,iBAAwB,OAAN8B,QAAM,IAANA,OAAM,EAANA,EAAQ9B,iBAAiBmD,SAClE,OAANrB,QAAM,IAANA,OAAM,EAANA,EAAQrB,MAGd,EEjBD,MAAMgF,EAAY7E,IAAOC,IAAGC,MAAAC,YAAA,yNAabW,I,YAAAA,MAAoB,IAAnB,UAAErB,GAAWqB,EAC3B,OACEuB,eAACwC,EAAS,CAAAtC,SAAA,CACP9C,EAAUqF,MAAM,IAACrC,cAACpC,EAAM,CAACX,OAAQD,EAAUC,WAGjD,ECrBc,OACb,MAAOqF,EAAYC,GAAiB5D,qBAMpC,OAJAC,qBAAU,KACR2D,GAAc,EAAK,GAClB,IAEI,CAACD,EACT,ECLcjE,MAA8B,IAA7B,QAAEC,EAAO,WAAEzB,GAAYwB,EACrC,MAAOiE,GAAcE,IAErB,OAAQlE,GAAWgE,GACP,OAAVzF,QAAU,IAAVA,OAAU,EAAVA,EAAYQ,QAAS,EACT,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAY4F,KAAKzF,GACfgD,cAACoC,EAAS,CAAoBpF,UAAWA,GAAzBA,EAAU0F,MAG5B1C,cAAA,KAAAF,SAAG,yBAGLF,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC2C,EAAQ,IACT3C,cAAC2C,EAAQ,IACT3C,cAAC2C,EAAQ,MAGd,E,QClBD,MAAMC,EAAWrF,IAAOC,IAAGC,MAAAC,YAAA,4QAGpBC,GACHA,EAAMkF,OAAS,0BAA4B,4BAYzCC,EAAUvF,IAAOC,IAAGM,MAAAJ,YAAA,8GAOpBqF,EAAQxF,IAAOC,IAAGS,MAAAP,YAAA,iGAOlBsF,GAAUzF,IAAOC,IAAGY,MAAAV,YAAA,2DAKpBE,GAASL,IAAOC,IAAGyF,MAAAvF,YAAA,0IACbC,GAAWA,EAAMkF,OAAS,UAAY,YAC3BlF,GACnBA,EAAMkF,OAAS,2BAA6B,4BAO1CK,GAAU3F,IAAOC,IAAG2F,MAAAzF,YAAA,uEAMXW,I,YAAAA,OAAA,IAAC,SAAE+E,GAAU/E,EAAA,OAC1BuB,eAACgD,EAAQ,CAACC,OAAQO,EAASC,UAAUvD,SAAA,CACnCF,eAACkD,EAAO,CAAAhD,SAAA,CACNE,cAACkD,GAAO,CAAApD,SACLX,IAAOiE,EAASE,YACdC,OAAO,wBACPC,gBAELxD,cAACpC,GAAM,CAACiF,OAAQO,EAASC,UAAUvD,SAChCsD,EAASC,UAAY,SAAW,cAGrCrD,cAAC+C,EAAK,CAAAjD,SAAEsD,EAASf,QACjBrC,cAACgD,GAAO,CAAAlD,SACNE,cAACyD,IAAa,CAAA3D,SAAEsD,EAASM,WAG9B,ECvEcnG,OAAOC,IAAGC,QAAAC,YAAA,4MCIzB,MAAMiG,GAAYpG,IAAOC,IAAGC,QAAAC,YAAA,6DAKtBqF,GAAQxF,IAAOC,IAAGM,QAAAJ,YAAA,0EAMlBkG,GAAUrG,IAAOC,IAAGS,QAAAP,YAAA,4BAIXW,I,kBAAAA,OAA6B,IAA5B,QAAEC,EAAO,UAAEuF,GAAWxF,EACpC,MAAOiE,GAAcE,IAErB,OACE5C,eAAC+D,GAAS,CAAA7D,SAAA,CACRE,cAAC+C,GAAK,CAAAjD,SAAC,eACLxB,GAAWgE,GACF,OAATuB,QAAS,IAATA,OAAS,EAATA,EAAWxG,QAAS,EACT,OAATwG,QAAS,IAATA,OAAS,EAATA,EAAWpB,KAAKW,GACdpD,cAAC4C,GAAQ,CAAmBQ,SAAUA,GAAvBA,EAASV,MAG1B1C,cAAC4D,GAAO,CAAA9D,SAAC,wBAGXF,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC2C,GAAQ,IACT3C,cAAC2C,GAAQ,IACT3C,cAAC2C,GAAQ,SAKlB,ECvCD,MAAMmB,GAAcvG,IAAOC,IAAGC,QAAAC,YAAA,4QAGvBC,GACDA,EAAMkF,OAAS,0BAA4B,4BAY3CC,GAAUvF,IAAOC,IAAGM,QAAAJ,YAAA,8GAOpBqF,GAAQxF,IAAOC,IAAGS,QAAAP,YAAA,iGAOlBsF,GAAUzF,IAAOC,IAAGY,QAAAV,YAAA,2DAKpBE,GAASL,IAAOC,IAAGyF,QAAAvF,YAAA,0IACbC,GAAWA,EAAMkF,OAAS,UAAY,YAC3BlF,GACnBA,EAAMkF,OAAS,2BAA6B,4BAO1CK,GAAU3F,IAAOC,IAAG2F,QAAAzF,YAAA,uEAMXW,I,YAAAA,OAAA,IAAC,YAAE0F,GAAa1F,EAAA,OAC7BuB,eAACkE,GAAW,CAACjB,OAAQkB,EAAYV,UAAUvD,SAAA,CACzCF,eAACkD,GAAO,CAAAhD,SAAA,CACNE,cAACkD,GAAO,CAAApD,SACLX,IAAO4E,EAAYT,YACjBC,OAAO,wBACPC,gBAELxD,cAACpC,GAAM,CAACiF,OAAQkB,EAAYV,UAAUvD,SACnCiE,EAAYV,UAAY,SAAW,cAGxCrD,cAAC+C,GAAK,CAAAjD,SAACE,cAAA,KAAGgE,KAAMD,EAAYE,SAASnE,SAAEiE,EAAY1B,UACnDrC,cAACgD,GAAO,CAAAlD,SACNE,cAACyD,IAAa,CAACS,OAAQH,EAAYV,UAAY,GAAKU,EAAYL,WAGrE,ECvEcnG,OAAOC,IAAGC,QAAAC,YAAA,4MCIzB,MAAMiG,GAAYpG,IAAOC,IAAGC,QAAAC,YAAA,6DAKtBqF,GAAQxF,IAAOC,IAAGM,QAAAJ,YAAA,0EAMlBkG,GAAUrG,IAAOC,IAAGS,QAAAP,YAAA,4BAIXW,I,MAAAA,OAAgC,IAA/B,QAAEC,EAAO,aAAE6F,GAAc9F,EACvC,MAAOiE,GAAcE,IAErB,OACE5C,eAAC+D,GAAS,CAAA7D,SAAA,CACRE,cAAC+C,GAAK,CAAAjD,SAAC,2BACLxB,GAAWgE,GACC,OAAZ6B,QAAY,IAAZA,OAAY,EAAZA,EAAc9G,QAAS,EACT,OAAZ8G,QAAY,IAAZA,OAAY,EAAZA,EAAc1B,KAAKsB,GACjB/D,cAAC8D,GAAW,CAAsBC,YAAaA,GAA7BA,EAAYrB,MAGhC1C,cAAC4D,GAAO,CAAA9D,SAAC,0BAGXF,eAAAC,WAAA,CAAAC,SAAA,CACEE,cAAC2C,GAAQ,IACT3C,cAAC2C,GAAQ,IACT3C,cAAC2C,GAAQ,SAKlB,ECzCD,MAAMyB,GAAS7G,IAAOC,IAAGC,QAAAC,YAAA,oFAMnB2G,GAAW9G,IAAO+G,EAACxG,QAAAJ,YAAA,uJAKXC,GAAWA,EAAM4G,QAAU,QAAU,SAOpC,I,MAAA,OACb3E,eAACwE,GAAM,CAAAtE,SAAA,CACLE,cAAA,UACAA,cAACqE,GAAQ,CACPE,QAA4C,UAAnC1D,4lBAAY2D,mBACrBR,KAAK,6CACLS,IAAI,WACJC,OAAO,SAAQ5E,SAChB,+BClBL,MAAM6D,GAAYpG,IAAOC,IAAGC,QAAAC,YAAA,wEAMtBiH,GAAsBpH,IAAOC,IAAGM,QAAAJ,YAAA,sIASvBkH,WAEb,MACEC,EACAC,EACAC,EACAC,GACEC,EAAU,cAEZC,EACAC,EACAC,EACAC,GACEJ,EAAU,aAEZK,EACAC,EACAC,EACAC,GACER,EAAU,eAEd,OACErF,eAAC+D,GAAS,CAAA7D,SAAA,CACRE,cAACwB,EAAM,IACP5B,eAAC+E,GAAmB,CAAA7E,SAAA,CAClBE,cAACpC,EAAM,CACLU,QAASuG,GAAqBK,GAAoBK,EAClDhH,MAAO,CACLwB,SAAU+E,GAAmBK,GAAkBI,EAC/CpF,OAAQ,CAAE2E,kBAAiBK,iBAAgBI,sBAE7C1I,WAAYkI,EACZvG,QAASA,KACPwG,IACAK,IACAI,GAAqB,IAGzBzF,cAAC0F,EAAU,CACTpH,QAASuG,EACThI,WAAYkI,OAGhB/E,cAAC8D,GAAW,CAACxF,QAASgH,EAAqBnB,aAAcqB,IACzDxF,cAAC2F,GAAS,CAACrH,QAAS4G,EAAkBrB,UAAWuB,IACjDpF,cAACoE,GAAM,MAGZ,EC9DmBwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACPlG,cAACmG,IAAMC,WAAU,CAAAtG,SACfE,cAACqG,GAAG,MAENC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5F,MAAK6F,IACJA,EAAaC,YAAY,IAE1BzF,OAAM5C,IACLsI,QAAQtI,MAAMA,EAAM7B,QAAQ,G","file":"static/js/main.93eb316d.chunk.js","sourcesContent":["export default {\n  operational: {\n    message: \"All Systems Operational\",\n    backgroundColour: \"#3da751\",\n  },\n  issues: {\n    message: \"Some systems are experiencing issues\",\n    backgroundColour: \"#4990e2\",\n  },\n  outage: {\n    message: \"Some systems are experiencing a major outage\",\n    backgroundColour: \"#d94430\",\n  },\n};\n","import { useState, useEffect } from \"react\";\nimport statuses from \"./statuses\";\n\nexport default (components) => {\n  const [status, setStatus] = useState();\n\n  useEffect(() => {\n    let statusSet = false;\n\n    if (getComponentLabelPercent(components, \"operational\") < 70) {\n      setStatus(statuses.issues);\n      statusSet = true;\n    }\n\n    if (getComponentLabelPercent(components, \"major outage\") > 0) {\n      setStatus(statuses.outage);\n      statusSet = true;\n    }\n\n    if (!statusSet) setStatus(statuses.operational);\n  }, [components]);\n\n  return [status];\n};\n\nconst getComponentLabelPercent = (components, label) =>\n  (components.filter((component) =>\n    component.labels.find((componentLabel) => componentLabel.name === label)\n  ).length *\n    100) /\n  components.length;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useStatus from \"./useStatus\";\nimport useRefetch from \"./useRefetch\";\n\nconst StatusBar = styled.div`\n  background-color: ${(props) =>\n    props.backgroundColour ? props.backgroundColour : \"#b1b1b1\"};\n  color: white;\n  padding: 16px;\n  border-radius: 3px;\n  margin-bottom: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  transition: 0.3s;\n`;\n\nconst Status = styled.h2`\n  font-size: 20px;\n  margin: 0;\n  font-weight: normal;\n`;\n\nconst Reload = styled.button`\n  background-color: transparent;\n  color: white;\n  text-decoration: underline;\n  border: none;\n  cursor: pointer;\n  text-align: right;\n  padding: 0;\n`;\n\nconst Code = styled.code`\n  white-space: pre-wrap;\n  display: block;\n`;\n\n// TODO: change all systems status based on current status of all components\nexport default ({ loading, error, components, refetch }) => {\n  const [status] = useStatus(components);\n  const [timeAgo] = useRefetch(refetch, loading);\n\n  return (\n    <>\n      {error.hasError && (\n        <Code>\n          <div>An error occured</div>\n          <div>\n            You may have exceeded the rate limit. Try again in 1 hour to fetch\n            the latest data.\n          </div>\n          {JSON.stringify(error.errors, null, 3)}\n        </Code>\n      )}\n      <StatusBar backgroundColour={status?.backgroundColour}>\n        <Status>{status?.message}</Status>\n        <Reload onClick={refetch}>{loading ? \"reloading\" : timeAgo}</Reload>\n      </StatusBar>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nexport default (refetch, updateTimeAgoDep) => {\n  const [timeAgo, setTimeAgo] = useState(\n    moment(\n      new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n    ).fromNow()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`)) <\n        new Date() - 240000\n      ) {\n        refetch(() => {\n          setTimeAgo(\n            moment(\n              new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n            ).fromNow()\n          );\n        });\n      } else {\n        setTimeAgo(\n          moment(\n            new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n          ).fromNow()\n        );\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [refetch]);\n\n  useEffect(() => {\n    setTimeAgo(\n      moment(\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n      ).fromNow()\n    );\n  }, [updateTimeAgoDep]);\n\n  return [timeAgo];\n};\n","import { useState, useEffect } from \"react\";\n\nexport default (label) => {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // GitHub rate limiting: 60 requests per hour/unauthenticated - fetches 15 times per hour / sending 30 requests (2 requests per fetch) and caches in localStorage\n    if (\n      new Date(localStorage.getItem(`issueStatusLastFetch${label}`)) <\n      new Date() - 240000\n    ) {\n      fetchData(setLoading, setError, setResults, label);\n    } else {\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\n      setLoading(false);\n      setError();\n    }\n  }, [label]);\n\n  return [\n    loading,\n    error,\n    results || [],\n    () => fetchData(setLoading, setError, setResults, label),\n  ];\n};\n\nconst fetchData = (setLoading, setError, setResults, label) => {\n  setLoading(true);\n  fetch(\n    `https://api.github.com/repos/${process.env.REACT_APP_REPOSITORY}/issues?state=all&labels=issue status,${label}`\n  )\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setError();\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\n      localStorage.setItem(`issueStatus${label}`, JSON.stringify(data));\n      setResults(data);\n      setLoading(false);\n    })\n    .catch((error) => {\n      setError(error.toString());\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\n      setLoading(false);\n    });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nconst Logo = styled.img``;\n\nconst Header = styled.div`\n  text-align: center;\n  margin-bottom: 16px;\n`;\n\nexport default () =>\n  process.env.REACT_APP_LOGO || process.env.REACT_APP_NAME ? (\n    <Header>\n      {process.env.REACT_APP_LOGO ? (\n        <Logo\n          src={process.env.REACT_APP_LOGO}\n          alt={process.env.REACT_APP_NAME}\n        />\n      ) : (\n        <Title>{process.env.REACT_APP_NAME}</Title>\n      )}\n    </Header>\n  ) : null;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100%;\n  height: 44px;\n  border-radius: 3px;\n  background-color: #f7f8f9;\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","export default {\n  operational: {\n    name: \"Operational\",\n    colour: \"#247234\",\n    backgroundColour: \"rgba(61, 167, 81, 0.1)\",\n  },\n  performanceIssues: {\n    name: \"Performance Issues\",\n    colour: \"#2f5888\",\n    backgroundColour: \"rgba(73, 144, 226, 0.1)\",\n  },\n  partialOutage: {\n    name: \"Partial Outage\",\n    colour: \"#74582a\",\n    backgroundColour: \"rgba(255, 198, 103, 0.1)\",\n  },\n  majorOutage: {\n    name: \"Major Outage\",\n    colour: \"#8e3b31\",\n    backgroundColour: \"rgba(217, 68, 48, 0.1)\",\n  },\n  unknown: {\n    name: \"Unknown\",\n    colour: \"#6e6b6b\",\n    backgroundColour: \"rgba(177, 177, 177, 0.1)\",\n  },\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useStatus from \"./useStatus\";\n\nconst Status = styled.div`\n  color: ${(props) => props.colour};\n  background-color: ${(props) => props.backgroundColour};\n  padding: 5px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  transition: 0.3s;\n`;\n\nexport default ({ labels }) => {\n  const [status] = useStatus(labels);\n\n  return (\n    <Status colour={status?.colour} backgroundColour={status?.backgroundColour}>\n      {status?.name}\n    </Status>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport statuses from \"./statuses\";\n\nexport default (labels) => {\n  const [status, setStatus] = useState();\n\n  useEffect(() => {\n    setStatus(\n      Object.values(statuses).find((status) =>\n        labels.find((label) => label.name === status.name.toLowerCase())\n      )\n    );\n  }, [labels]);\n\n  if (!status) setStatus(statuses.unknown);\n\n  return [status];\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Status from \"./status\";\n\nconst Component = styled.div`\n  background-color: #f7f8f9;\n  padding: 8px 16px;\n  border-radius: 3px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport default ({ component }) => {\n  return (\n    <Component>\n      {component.title} <Status labels={component.labels} />\n    </Component>\n  );\n};\n","import { useEffect, useState } from \"react\";\n\nexport default () => {\n  const [hasMounted, setHasMounted] = useState();\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  return [hasMounted];\n};\n","import React from \"react\";\nimport Skeleton from \"./skeleton\";\nimport Component from \"./component\";\nimport useDidMount from \"../useDidMount\";\n\nexport default ({ loading, components }) => {\n  const [hasMounted] = useDidMount();\n\n  return !loading || hasMounted ? (\n    components?.length > 0 ? (\n      components?.map((component) => (\n        <Component key={component.id} component={component} />\n      ))\n    ) : (\n      <p>No Components found.</p>\n    )\n  ) : (\n    <>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Incident = styled.div`\n  transition: 0.3s;\n  border-left: 16px solid\n    ${(props) =>\n    props.active ? \"rgba(177, 177, 177,0.2)\" : \"rgba(73, 144, 226, 0.2)\"};\n  background-color: white;\n  border-radius: 3px;\n  padding: 16px;\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n  margin-top: 8px;\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Details = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 3px;\n`;\n\nconst Title = styled.div`\n  margin-right: 16px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #1e1e1e;\n`;\n\nconst Comment = styled.div`\n  white-space: break-spaces;\n  color: #1e1e1e;\n`;\n\nconst Status = styled.div`\n  color: ${(props) => (props.active ? \"#6e6b6b\" : \"#2f5888\")};\n  background-color: ${(props) =>\n    props.active ? \"rgba(177, 177, 177, 0.1)\" : \"rgba(73, 144, 226, 0.1)\"};\n  padding: 5px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  transition: 0.3s;\n`;\n\nconst Created = styled.div`\n  font-size: 13px;\n  color: #6e6b6b;\n  font-weight: bold;\n`;\n\nexport default ({ incident }) => (\n  <Incident active={incident.closed_at}>\n    <Details>\n      <Created>\n        {moment(incident.created_at)\n          .format(\"MMMM Do YYYY, h:mm a\")\n          .toUpperCase()}\n      </Created>\n      <Status active={incident.closed_at}>\n        {incident.closed_at ? \"Closed\" : \"Active\"}\n      </Status>\n    </Details>\n    <Title>{incident.title}</Title>\n    <Comment>\n      <ReactMarkdown>{incident.body}</ReactMarkdown>\n    </Comment>\n  </Incident>\n);\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100%;\n  height: 84px;\n  border-radius: 3px;\n  background-color: white;\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Incident from \"./incident\";\nimport Skeleton from \"./skeleton\";\nimport useDidMount from \"../useDidMount\";\n\nconst Container = styled.div`\n  margin: 32px auto 0 auto;\n  max-width: 1040px;\n`;\n\nconst Title = styled.div`\n  padding: 0 16px;\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\n\nconst NoFound = styled.div`\n  margin: 0 8px;\n`;\n\nexport default ({ loading, incidents }) => {\n  const [hasMounted] = useDidMount();\n\n  return (\n    <Container>\n      <Title>Incidents</Title>\n      {!loading || hasMounted ? (\n        incidents?.length > 0 ? (\n          incidents?.map((incident) => (\n            <Incident key={incident.id} incident={incident} />\n          ))\n        ) : (\n          <NoFound>No Incidents found.</NoFound>\n        )\n      ) : (\n        <>\n          <Skeleton />\n          <Skeleton />\n          <Skeleton />\n        </>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Maintenance = styled.div`\n  transition: 0.3s;\n  border-left: 16px solid\n    ${(props) =>\n      props.active ? \"rgba(177, 177, 177,0.2)\" : \"rgba(73, 144, 226, 0.2)\"};\n  background-color: white;\n  border-radius: 3px;\n  padding: 16px;\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n  margin-top: 8px;\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst Details = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 3px;\n`;\n\nconst Title = styled.div`\n  margin-right: 16px;\n  font-weight: bold;\n  margin-bottom: 8px;\n  color: #1e1e1e;\n`;\n\nconst Comment = styled.div`\n  white-space: break-spaces;\n  color: #1e1e1e;\n`;\n\nconst Status = styled.div`\n  color: ${(props) => (props.active ? \"#6e6b6b\" : \"#2f5888\")};\n  background-color: ${(props) =>\n    props.active ? \"rgba(177, 177, 177, 0.1)\" : \"rgba(73, 144, 226, 0.1)\"};\n  padding: 5px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  transition: 0.3s;\n`;\n\nconst Created = styled.div`\n  font-size: 13px;\n  color: #6e6b6b;\n  font-weight: bold;\n`;\n\nexport default ({ maintenance }) => (\n  <Maintenance active={maintenance.closed_at}>\n    <Details>\n      <Created>\n        {moment(maintenance.created_at)\n          .format(\"MMMM Do YYYY, h:mm a\")\n          .toUpperCase()}\n      </Created>\n      <Status active={maintenance.closed_at}>\n        {maintenance.closed_at ? \"Closed\" : \"Active\"}\n      </Status>\n    </Details>\n    <Title><a href={maintenance.html_url}>{maintenance.title}</a></Title>\n    <Comment>\n      <ReactMarkdown source={maintenance.closed_at ? \"\" : maintenance.body} />\n    </Comment>\n  </Maintenance>\n);\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100%;\n  height: 84px;\n  border-radius: 3px;\n  background-color: white;\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Maintenance from \"./maintenance\";\nimport Skeleton from \"./skeleton\";\nimport useDidMount from \"../useDidMount\";\n\nconst Container = styled.div`\n  margin: 32px auto 0 auto;\n  max-width: 1040px;\n`;\n\nconst Title = styled.div`\n  padding: 0 16px;\n  font-size: 20px;\n  margin-bottom: 16px;\n`;\n\nconst NoFound = styled.div`\n  margin: 0 8px;\n`;\n\nexport default ({ loading, smaintenance }) => {\n  const [hasMounted] = useDidMount();\n\n  return (\n    <Container>\n      <Title>Scheduled Maintenance</Title>\n      {!loading || hasMounted ? (\n        smaintenance?.length > 0 ? (\n          smaintenance?.map((maintenance) => (\n            <Maintenance key={maintenance.id} maintenance={maintenance} />\n          ))\n        ) : (\n          <NoFound>No Maintenance found.</NoFound>\n        )\n      ) : (\n        <>\n          <Skeleton />\n          <Skeleton />\n          <Skeleton />\n        </>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;\n\nconst Branding = styled.a`\n  color: #6e6b6b;\n  font-size: 13px;\n  text-decoration: none;\n  transition: 0.3s;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n\n  :hover {\n    opacity: 0.9;\n  }\n`;\n\nexport default () => (\n  <Footer>\n    <div></div>\n    <Branding\n      visible={process.env.REACT_APP_BRANDING !== \"false\"}\n      href=\"https://github.com/tadhglewis/issue-status\"\n      rel=\"noopener\"\n      target=\"_blank\"\n    >\n      Powered by Issue Status\n    </Branding>\n  </Footer>\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Status from \"./status\";\nimport useIssues from \"./useIssues\";\nimport Header from \"./header\";\nimport Components from \"./components\";\nimport Incidents from \"./incidents\";\nimport Maintenance from \"./smaintenance\";\nimport Footer from \"./footer\";\n\nconst Container = styled.div`\n  max-width: 1008px;\n  padding: 16px;\n  margin: 16px auto;\n`;\n\nconst ComponentsContainer = styled.div`\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n  border-radius: 3px;\n  background-color: white;\n  padding: 50px;\n`;\n\nconst Name = () => {  }; \n\nexport default Name => {\n  // loading, errors, results, refetch\n  const [\n    componentsLoading,\n    componentsError,\n    componentsResults,\n    componentsRefetch,\n  ] = useIssues(\"component\");\n  const [\n    incidentsLoading,\n    incidentsError,\n    incidentsResults,\n    incidentsRefetch,\n  ] = useIssues(\"incident\");\n  const [\n    smaintenanceLoading,\n    smaintenanceError,\n    smaintenanceResults,\n    smaintenanceRefetch,\n  ] = useIssues(\"maintenance\");\n\n  return (\n    <Container>\n      <Header />\n      <ComponentsContainer>\n        <Status\n          loading={componentsLoading || incidentsLoading || smaintenanceError}\n          error={{\n            hasError: componentsError || incidentsError || smaintenanceError,\n            errors: { componentsError, incidentsError, smaintenanceError },\n          }}\n          components={componentsResults}\n          refetch={() => {\n            componentsRefetch();\n            incidentsRefetch();\n            smaintenanceRefetch();\n          }}\n        />\n        <Components\n          loading={componentsLoading}\n          components={componentsResults}\n        />\n      </ComponentsContainer>\n      <Maintenance loading={smaintenanceLoading} smaintenance={smaintenanceResults} />\n      <Incidents loading={incidentsLoading} incidents={incidentsResults} />\n      <Footer />\n    </Container>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}